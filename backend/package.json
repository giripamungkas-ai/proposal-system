{
  "name": "mdmedia-proposal-system-backend",
  "version": "1.0.0",
  "description": "MDMEDIA Strategic Proposal Submission Management System - Backend API",
  "main": "src/app.js",
  "type": "module",
  "scripts": {
    "start": "node src/app.js",
    "dev": "nodemon src/app.js",
    "dev:python": "cd . && python app.py",
    "start:python": "cd . && python app.py",
    "build": "tsc",
    "build:python": "echo 'Python build complete'",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "lint": "eslint src/ --ext .js,.ts",
    "lint:fix": "eslint src/ --ext .js,.ts --fix",
    "format": "prettier --write \"src/**/*.{js,ts,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{js,ts,json,md}\"",
    "type-check": "tsc --noEmit",
    "db:migrate": "node src/database/migrate.js",
    "db:seed": "node src/database/seed.js",
    "db:reset": "node src/database/reset.js",
    "db:backup": "node src/database/backup.js",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "deps:update": "npm-check-updates -u",
    "deps:check": "npm-check-updates",
    "docker:build": "docker build -t proposal-backend .",
    "docker:run": "docker run -p 8000:8000 proposal-backend",
    "docs:generate": "swagger-jsdoc -d swaggerDef.js src/routes/*.js -o docs/swagger.json",
    "docs:serve": "swagger-ui-express-cli -s docs/swagger.json",
    "health-check": "curl -f http://localhost:8000/health || exit 1",
    "load-test": "artillery run tests/load-test.yml",
    "performance:test": "clinic doctor -- node src/app.js",
    "monitor:start": "pm2 start ecosystem.config.js",
    "monitor:stop": "pm2 stop all",
    "monitor:restart": "pm2 restart all",
    "monitor:logs": "pm2 logs",
    "clean": "rm -rf dist node_modules coverage",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "pre-push": "npm run type-check && npm run test"
  },
  "keywords": [
    "proposal",
    "management",
    "system",
    "mdmedia",
    "api",
    "backend",
    "nodejs",
    "express",
    "fastapi",
    "python",
    "sqlite",
    "websocket",
    "ai",
    "automation"
  ],
  "author": {
    "name": "MDSMedia Team",
    "email": "dev@mdmedia.id",
    "url": "https://mdmedia.id"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/blazzads/proposal-system.git"
  },
  "bugs": {
    "url": "https://github.com/blazzads/proposal-system/issues"
  },
  "homepage": "https://github.com/blazzads/proposal-system#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "python": ">=3.9.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0",
    "compression": "^1.7.4",
    "dotenv": "^16.3.1",
    "pg": "^8.11.3",
    "sqlite3": "^5.1.6",
    "better-sqlite3": "^9.2.2",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "joi": "^17.9.2",
    "uuid": "^9.0.0",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.9.7",
    "ws": "^8.14.2",
    "socket.io": "^4.7.4",
    "axios": "^1.6.2",
    "winston": "^3.10.0",
    "winston-daily-rotate-file": "^4.7.1",
    "rate-limiter-flexible": "^2.4.2",
    "express-rate-limit": "^6.10.0",
    "express-validator": "^7.0.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "cookie-parser": "^1.4.6",
    "express-session": "^1.17.3",
    "connect-pg-simple": "^9.0.0",
    "connect-redis": "^7.1.0",
    "redis": "^4.6.10",
    "bull": "^4.12.2",
    "bull-board": "^2.1.3",
    "node-cron": "^3.0.3",
    "pdf-parse": "^1.1.1",
    "mammoth": "^1.6.0",
    "sharp": "^0.33.1",
    "csv-parser": "^3.0.0",
    "xlsx": "^0.18.5",
    "archiver": "^6.0.1",
    "extract-zip": "^2.0.1",
    "mime-types": "^2.1.35",
    "express-fileupload": "^1.4.3",
    "express-static": "^1.2.6",
    "http-proxy-middleware": "^2.0.6",
    "http-proxy": "^1.18.1",
    "https-proxy-agent": "^7.0.4",
    "node-fetch": "^3.3.2",
    "form-data": "^4.0.0",
    "stream": "^0.0.2",
    "fs-extra": "^11.2.0",
    "path": "^0.12.7",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "date-fns": "^2.30.0",
    "crypto-js": "^4.2.0",
    "bcrypt": "^5.1.1",
    "argon2": "^0.31.0",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "passport-jwt": "^4.0.1",
    "passport-google-oauth20": "^2.0.0",
    "passport-facebook": "^3.0.0",
    "passport-linkedin-oauth2": "^2.0.0",
    "express-gateway": "^1.16.0",
    "graphql": "^15.8.0",
    "apollo-server-express": "^3.12.1",
    "type-graphql": "^1.1.1",
    "reflect-metadata": "^0.2.1",
    "class-validator": "^0.14.1",
    "class-transformer": "^0.5.1",
    "typeorm": "^0.3.17",
    "prisma": "^5.7.0",
    "@prisma/client": "^5.7.0"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "@types/express": "^4.17.17",
    "@types/cors": "^2.8.13",
    "@types/helmet": "^4.0.0",
    "@types/morgan": "^1.9.4",
    "@types/compression": "^1.7.2",
    "@types/pg": "^8.10.2",
    "@types/bcryptjs": "^2.4.2",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/joi": "^17.2.3",
    "@types/uuid": "^9.0.2",
    "@types/multer": "^1.4.7",
    "@types/nodemailer": "^6.4.13",
    "@types/ws": "^8.5.4",
    "@types/swagger-jsdoc": "^6.0.1",
    "@types/swagger-ui-express": "^4.1.3",
    "@types/cookie-parser": "^1.4.3",
    "@types/express-session": "^1.17.7",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/jest": "^29.5.8",
    "@types/supertest": "^2.0.12",
    "@types/lodash": "^4.14.202",
    "@types/mime-types": "^2.1.1",
    "@types/fs-extra": "^11.0.4",
    "@types/crypto-js": "^4.2.1",
    "@types/bcrypt": "^5.0.0",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/passport-jwt": "^3.0.13",
    "@types/passport-google-oauth20": "^2.0.14",
    "@types/passport-facebook": "^3.0.3",
    "@types/passport-linkedin-oauth2": "^1.5.3",
    "typescript": "^5.3.2",
    "ts-node": "^10.9.1",
    "nodemon": "^3.0.1",
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-node": "^11.1.0",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "prettier": "^3.1.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.1.0",
    "clinic": "^13.0.0",
    "artillery": "^2.0.0",
    "pm2": "^5.3.0",

    "npm-check-updates": "^16.14.11",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.3.0",
    "playwright": "^1.40.1",
    "wait-on": "^7.2.0",
    "jest": "^29.7.0"
  },
  "jest": {
    "testEnvironment": "node",
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/?(*.)+(spec|test).js"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,ts}",
      "!src/**/*.d.ts",
      "!src/__tests__/**"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 70,
        "functions": 70,
        "lines": 70,
        "statements": 70
      }
    }
  },
  "eslintConfig": {
    "extends": [
      "prettier",
      "@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "node"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "no-unused-vars": "error",
      "no-console": "warn",
      "prefer-const": "error",
      "no-var": "error",
      "node/no-unsupported-features/es-syntax": "off"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false
  },
  "lint-staged": {
    "*.{js,ts}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run type-check && npm run test"
    }
  }
}
